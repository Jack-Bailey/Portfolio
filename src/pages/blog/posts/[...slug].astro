---
import { getEntry, getEntries, getCollection } from 'astro:content';
import dayjs from "dayjs";
import advancedFormat from "dayjs/plugin/advancedFormat";
import utc from "dayjs/plugin/utc";

import Main from "../../../layouts/Main.astro";
import Giscus from "../../../components/blog/Giscus.astro";

import "../../../styles/markdown.scss";
import "../../../styles/global.scss";

dayjs.extend(advancedFormat);
dayjs.extend(utc);


export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const blogPost = await getEntry('blog', Astro.params.slug);
const { Content, headings } = await blogPost.render();

---

<Main>
    <div class="blog-post">
        <div class="blog-content">
            <h1 class=""> { blogPost.data.title } </h1>
            <div class="timestamps">
                { blogPost.data.created && <p><b>Posted:</b> { dayjs(blogPost.data.created).utc().format("Do MMMM YYYY") }</p> }
                { blogPost.data.modified && <p><b>Updated:</b> { dayjs(blogPost.data.modified).utc().format("Do MMMM YYYY") }</p> }
            </div>
            <div class="markdown-body">
                <Content />
            </div>
            <Giscus />
        </div>
    </div>
</Main>


<style lang="scss">
.blog-post {
    background-color: var(--background-1);
    color: var(--foreground-1);
    // display: grid;
    // place-content: center;
    width: 100%;
    .blog-content {
        padding: 1rem;
        margin: 0 auto;
        width: 1000px;
        max-width: 90%;
        > h1 {
            margin-bottom: 0;
        }
        p {
            font-size: 0.8rem;
        }
        .markdown-body {
            margin-top: 3rem;
        }
    }
}
</style>